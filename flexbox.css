/* FLEXBOX */
/* Flexbox allows for a flexiable and responsive layout to be created without having to use float or position */

div div {
    width: 200px;
    margin: 10px;
    border: 3px solid black;
    font-size: 25px;
  }
  
  .container {
    background: #999;
    /* display: flex creates a flexbox container */
    /* Flexbox always has a main axis and cross axis. Main axis is horizontal and cross axis is vertical by default when using flexbox (Ex: display: flex) */
    display: flex;
  
    /* Justify Content */
    /* Justify content will determine how the elements are set along the main axis (Horizontal axis in this case) */
    /* flex-start is the default justify content value */
    /* justify-content: flex-start; */
    /* flex-end positions the flexbox items at the end of the main axis (All the way to the right in our case) */
    /* justify-content: flex-end; */
    /* center positions the flexbox items in the center of the main axis (Horizontal axis in our case) */
    /* justify-content: center; */
    /* space-between positions the items with even distribution of space between them */
    /* justify-content: space-between; */
    /* space-around positions the items with even distribution of left and right margin on each one */
    /* justify-content: space-around; */
  
    /* Align Items */
    /* Align Items will determine how the elements are set along the cross axis (Vertical axis in this case) */
    /* Stretch is the default value for Align Items (Since we have min-height values set on the divs they stretch to fill the veritcal space) */
    /* align-items: stretch; */
    /* Center will remove the default stretch value and center each item along the cross axis (Vertical axis in this case) */
    /* align-items: center; */
    /* align-items: flex-start; */
    /* align-items: flex-end; */
  
    /* Flex Wrap */
    /* Flex Wrap wraps items that cannot fit on the current line onto the next line */
    /* flex-wrap: wrap; */
  
    /* Align Content */
    /* Align Content is used like "align-items" for elements that are being wrapped onto another line */
    /* align-content: center; */
    /* align-content: flex-end; */
    /* align-content: flex-start; */
    /* height: 1000px; */
  
    /* Flex Direction */
    /* Flex Direction set the flex items in a row or a column (The default is a row) */
    /* flex-direction: column changes flex items into a column intead of a row */
    /* flex-direction: column; */
    /* align-items: center; */
    /* justify-content: flex-end; */
  }
  
  .red {
    background: red;
    min-height: 100px;
  
    /* Flex Shrink */
    /* Flex Shrink determines if a flexbox item will shrink and how much it will shrink. 1 is the default value */
    /* flex-shrink: 1; */
    /* Item does not shrink */
    /* flex-shrink: 0; */
    /* Item shrinks twice as fast as other items */
    flex-shrink: 2;
  }
  .green {
    background: green;
    min-height: 200px;
  }
  .blue {
    background: blue;
    min-height: 300px;
  }
  
  
  
  